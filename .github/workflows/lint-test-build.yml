name: Lint-Test-Build

on: push

jobs:
  Lint:
    runs-on: [self-hosted]
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3

      - name: "Setup node"
        uses: ./.github/actions/setup-node
        with: 
          api-secret-env: ${{ secrets.ENV_FILE }}

      - name: "linting"
        run: npm run lint

  Test:
    runs-on: [self-hosted]
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3

      - name: "Setup node"
        uses: ./.github/actions/setup-node
        with: 
          api-secret-env: ${{ secrets.ENV_FILE }}
      
      - name: "Run cypress tests"
        uses: cypress-io/github-action@v5
        with:
          working-directory: frontend
          install: false
          start: npm run dev
          wait-on: "http://localhost:8080"
          wait-on-timeout: 110
          config-file: cypress.config.ts
          command: npm run cy:run

      - name: Archive code coverage artifacts
        uses: actions/upload-artifact@v3
        with: 
          name: CodeCoverage
          path: frontend/reports
          retention-days: 14

  Build:
    runs-on: [self-hosted]
    needs: [Lint, Test]
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3

      - name: "Setup node"
        uses: ./.github/actions/setup-node
        with: 
          api-secret-env: ${{ secrets.ENV_FILE }}
      
      - name: "Build application"
        run: npm run build-only

      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: BuildWebApp
          path: frontend/dist
          retention-days: 14

  Deploy:
    runs-on: [self-hosted]
    needs: [Build]
    if: github.ref == 'refs/heads/main'
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3

      - name: "Setup node"
        uses: ./.github/actions/setup-node
        with: 
          api-secret-env: ${{ secrets.ENV_FILE }}

      - name: "Login to Docker Hub"
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: "Build, Push and Deploy"
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: lucasschmitz/vuejs-api-demo:latest
          file: "frontend/Dockerfile"
